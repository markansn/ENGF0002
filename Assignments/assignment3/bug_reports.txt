Bug Reports assignment 3

TODO:
Game restart freeze
Frog can 'fly' if foward is held down

Leftmost win spot doesn't work

<<<<<<<<<Bug 1>>>>>>>>>>

Summary: Lives drained when frog hits car / falls into lake.

Description: Once the frog has been hit by a car, the death animation is displayed. Afterwards it seems that the frog briefly reappears, another life is lost, and the process repeats again until all lives are lost. 

What should happen: The frog should return to the beginning of the level with one life lost.

To reproduce: Get the frog to be hit by a car.

Explanation: When the frog is hit / falls in the water, the position of the frog is never reset, so it continually dies until the player runs out of lives.

Solution: After the frog has died, and the death animation has played out, the reset_position() function in the model can be called. 
In view:
    def check_undead(self, time_now):
        if time_now - self.died_time < 1:
            #still dead
            return
        self.dead = False
        self.frog.reset_position()
        self.canvas.delete(self.items[0])
        self.items.clear()
        self.draw()

<<<<<<<<<<Bug 2>>>>>>>>>>

Summary: Frog cannot hop onto the turtles.

Description: When the frog hops onto a turtle, the game seems to act like it has hit the water and the frog dies.

What should happen: The frog should be able to sit on the turtles.

To reproduce: Attempt to get the frog to hop onto the turtles.

Explination: Due to a simple typo in check_frog_crossing_river(), the value of on_log is never changed and is always none, so even if the frog is on the log it still dies.

Solution: Fix typo. Line 374
                if log.contains(self.frog):
                    on_log = log
                    print("here")
                    break


<<<<<<<<<<Bug 3>>>>>>>>>>

Summary: Frog can float above the water on the end of a log object.

Description: The frog can hang off the end of a log as long as a tiny bit of it is touching the rightmost side of the log.

What should happen: If the frog is not compleatly within the bounds of the log, the frog should die.

To reproduce: Hop onto a log in such a way to clip the rightmost hand side of the log, the frog however does not die. 

Explination: This bug is due to the nature of the way coordinates are handled by the game. As the coordinates of the frog start at the leftmost side of the frog. The problem is the bounds of the log are not correctly checked against the position of the frog.

Solution: 

    def contains(self, frog):
        (frog_x, frog_y) = frog.get_position()
        

        if frog_y != self.y or frog_x < self.x-20 or frog_x > self.x + self.width - 20:
        
            return False

        return True


<<<<<<<<<<Bug 4>>>>>>>>>>
Summary: Frog can 'fly' across the stage to the end

Description: By holding down a direction key, the frog 'flies' in that direction, and all things that should kill it are ignored.

To reproduce: Hold down an arrow key.

Explination: The movement of the frog is done before things such as collisions are checked.

Solution: In check frog, move:

   if self.frog.moving:
            self.frog.finish_move()
            return

to the end of the function, so it is the last thing that is handled. All other checks are done first. 








[300, 500, 700, 900, 1100, 1300]
20.0
coordinates of frog: 94.35877346250572 and 120
False
205.64122653749428
coordinates of frog: 94.35877346250572 and 120
False
405.6412265374943
coordinates of frog: 94.35877346250572 and 120
False
605.6412265374943
coordinates of frog: 94.35877346250572 and 120
False
805.6412265374943
coordinates of frog: 94.35877346250572 and 120
False
1005.6412265374943


coordinates of frog: 101.60225599701997 and 120
False
198.39774400298003
coordinates of frog: 101.60225599701997 and 120
False
398.39774400298006
coordinates of frog: 101.60225599701997 and 120
False
598.3977440029801
coordinates of frog: 101.60225599701997 and 120
False
798.3977440029801
coordinates of frog: 101.60225599701997 and 120
False
998.3977440029801


[300, 500, 700, 900, 1100, 1300]
20.0
coordinates of frog: 100.9380323444674 and 120
False
199.0619676555326
coordinates of frog: 100.9380323444674 and 120
False
399.0619676555326
coordinates of frog: 100.9380323444674 and 120
False
599.0619676555326
coordinates of frog: 100.9380323444674 and 120
False
799.0619676555326
coordinates of frog: 100.9380323444674 and 120
False
999.0619676555326
20.0

[300, 500, 700, 900, 1100, 1300]
20.0
coordinates of frog: 93.27976684070873 and 120
False
206.72023315929127
coordinates of frog: 93.27976684070873 and 120
False
406.7202331592913
coordinates of frog: 93.27976684070873 and 120
False
606.7202331592913
coordinates of frog: 93.27976684070873 and 120
False
806.7202331592913
coordinates of frog: 93.27976684070873 and 120
False
1006.7202331592913


20.0
coordinates of frog: 500 and 120
True
-200
20.0
coordinates of frog: 100 and 120
False
200
coordinates of frog: 100 and 120
False
400
coordinates of frog: 100 and 120
False
600
coordinates of frog: 100 and 120
False
800
coordinates of frog: 100 and 120
False
1000

[300, 500, 700, 900, 1100, 1300]
300
500
700
900
1100
1300
20.0
coordinates of frog: 100 and 120
False
200
coordinates of frog: 100 and 120
False
400
coordinates of frog: 100 and 120
False
600
coordinates of frog: 100 and 120
False
800
coordinates of frog: 100 and 120
False
1000

